/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DialogDownloader.java
 *
 * Created on Apr 29, 2011, 12:18:22 AM
 */
package filedownloader;

import javax.swing.JOptionPane;
import java.awt.Point;
import java.net.MalformedURLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import filedownloader.*;

/**
 *
 * @author haonguyen
 */
public class DialogDownloader extends javax.swing.JDialog {
  // khai báo các thuộc tính
    ArrayList file_list=new ArrayList();
    // quản lý danh sách tất cả downloader đang chạy
    ArrayList<DownloadThread> dowloaders=new ArrayList<DownloadThread>();
    
    int row_selected_index;
  /** Creates new form DialogDownloader */
  public DialogDownloader(java.awt.Frame parent, boolean modal) {
    super(parent, modal);
    initComponents();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    mainPanel = new javax.swing.JPanel();
    jToolBar1 = new javax.swing.JToolBar();
    btnURL = new javax.swing.JButton();
    btnStart = new javax.swing.JButton();
    btnPauseAll = new javax.swing.JButton();
    btnResumAll = new javax.swing.JButton();
    btnPauseOne = new javax.swing.JButton();
    btnResumOne = new javax.swing.JButton();
    jPanel1 = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    tableFiles = new javax.swing.JTable();
    txtSaveTo = new javax.swing.JTextField();
    jLabel1 = new javax.swing.JLabel();
    btnSelectFolder = new javax.swing.JButton();
    jLabel2 = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setName("Form"); // NOI18N

    mainPanel.setName("mainPanel"); // NOI18N

    jToolBar1.setRollover(true);
    jToolBar1.setName("jToolBar1"); // NOI18N

    btnURL.setIcon(null);
    org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(zingmp3downloader.ZingMp3DownloaderApp.class).getContext().getResourceMap(DialogDownloader.class);
    btnURL.setText(resourceMap.getString("btnURL.text")); // NOI18N
    btnURL.setToolTipText(resourceMap.getString("btnURL.toolTipText")); // NOI18N
    btnURL.setFocusable(false);
    btnURL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnURL.setName("btnURL"); // NOI18N
    btnURL.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    btnURL.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnURLActionPerformed(evt);
      }
    });
    jToolBar1.add(btnURL);

    btnStart.setIcon(null);
    btnStart.setText(resourceMap.getString("btnStart.text")); // NOI18N
    btnStart.setFocusable(false);
    btnStart.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnStart.setName("btnStart"); // NOI18N
    btnStart.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    btnStart.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnStartActionPerformed(evt);
      }
    });
    jToolBar1.add(btnStart);

    btnPauseAll.setIcon(null);
    btnPauseAll.setText(resourceMap.getString("btnPauseAll.text")); // NOI18N
    btnPauseAll.setEnabled(false);
    btnPauseAll.setFocusable(false);
    btnPauseAll.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnPauseAll.setName("btnPauseAll"); // NOI18N
    btnPauseAll.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    btnPauseAll.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnPauseAllActionPerformed(evt);
      }
    });
    jToolBar1.add(btnPauseAll);

    btnResumAll.setIcon(null);
    btnResumAll.setText(resourceMap.getString("btnResumAll.text")); // NOI18N
    btnResumAll.setEnabled(false);
    btnResumAll.setFocusable(false);
    btnResumAll.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnResumAll.setName("btnResumAll"); // NOI18N
    btnResumAll.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    btnResumAll.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnResumAllActionPerformed(evt);
      }
    });
    jToolBar1.add(btnResumAll);

    btnPauseOne.setIcon(null);
    btnPauseOne.setText(resourceMap.getString("btnPauseOne.text")); // NOI18N
    btnPauseOne.setEnabled(false);
    btnPauseOne.setFocusable(false);
    btnPauseOne.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnPauseOne.setName("btnPauseOne"); // NOI18N
    btnPauseOne.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    btnPauseOne.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnPauseOneActionPerformed(evt);
      }
    });
    jToolBar1.add(btnPauseOne);

    btnResumOne.setIcon(null);
    btnResumOne.setText(resourceMap.getString("btnResumOne.text")); // NOI18N
    btnResumOne.setEnabled(false);
    btnResumOne.setFocusable(false);
    btnResumOne.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnResumOne.setName("btnResumOne"); // NOI18N
    btnResumOne.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    btnResumOne.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnResumOneActionPerformed(evt);
      }
    });
    jToolBar1.add(btnResumOne);

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("jPanel1.border.title"))); // NOI18N
    jPanel1.setName("jPanel1"); // NOI18N

    jScrollPane1.setName("jScrollPane1"); // NOI18N

    tableFiles.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
      },
      new String [] {
        "ID", "File name", "Size", "Percent"
      }
    ));
    tableFiles.setName("tableFiles"); // NOI18N
    tableFiles.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        tableFilesMouseClicked(evt);
      }
    });
    jScrollPane1.setViewportView(tableFiles);

    txtSaveTo.setText(resourceMap.getString("txtSaveTo.text")); // NOI18N
    txtSaveTo.setName("txtSaveTo"); // NOI18N

    jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
    jLabel1.setName("jLabel1"); // NOI18N

    btnSelectFolder.setText(resourceMap.getString("btnSelectFolder.text")); // NOI18N
    btnSelectFolder.setName("btnSelectFolder"); // NOI18N
    btnSelectFolder.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnSelectFolderActionPerformed(evt);
      }
    });

    jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
    jLabel2.setName("jLabel2"); // NOI18N

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 811, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addComponent(jLabel1)
            .addGap(39, 39, 39)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel2)
              .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(txtSaveTo, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnSelectFolder)))))
        .addContainerGap(34, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(58, 58, 58)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(txtSaveTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(btnSelectFolder))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabel2)
        .addContainerGap(204, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
    mainPanel.setLayout(mainPanelLayout);
    mainPanelLayout.setHorizontalGroup(
      mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(mainPanelLayout.createSequentialGroup()
        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(58, Short.MAX_VALUE))
    );
    mainPanelLayout.setVerticalGroup(
      mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(mainPanelLayout.createSequentialGroup()
        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 1148, Short.MAX_VALUE)
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
          .addGap(0, 116, Short.MAX_VALUE)
          .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGap(0, 117, Short.MAX_VALUE)))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 681, Short.MAX_VALUE)
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
          .addGap(0, 14, Short.MAX_VALUE)
          .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGap(0, 15, Short.MAX_VALUE)))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void btnURLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnURLActionPerformed
    // TODO add your handling code here:
    if(txtSaveTo.getText().isEmpty()) {
      JOptionPane.showMessageDialog(null, "Please select folder to save file");
      return;
    }
    filedownloader.DialogAddURL dlg=new DialogAddURL(new JFrame(), rootPaneCheckingEnabled);
    dlg.show();
    
    this.txtSaveTo.setEnabled(false);
    this.btnSelectFolder.setEnabled(false);
    // sau khi người dùng đóng dialog, sẽ lấy được danh sách các URL người dùng đưa vào
    
    this.file_list=dlg.file_list;
    
    // lấy các file này đưa lên danh sách sẵn sàng đownload
    Vector header= new Vector();
    header.add("ID");
    header.add("File name");
    header.add("Size (Kb)");
    header.add("Percent");
    //tao mot tablemodel de chua jtable
    DefaultTableModel model = new DefaultTableModel(header,0);
    tableFiles.setModel(model);
    
    for (Integer i=0;i<this.file_list.size();i++) {
      Downloader dl = null;
      String strURL=(String)file_list.get(i);
      URL url=null;
      try {
        url = new URL(strURL);
      } catch (MalformedURLException ex) {
        Logger.getLogger(FileDownloaderView.class.getName()).log(Level.SEVERE, null, ex);
      }
      String filename=url.getFile();
      File f=new File(filename);
      String name=f.getName();
      name=name.replaceAll("%20", " ") ;
      
      // khỡi tạo 1 Downloader tương ứng với 1 url
      //dl=new Downloader(new URL(strURL), new File(i.toString()+".txt"));
      //dowloaders.add(dl);
      // khỡi tạo thead để thực hiện download
      DownloadThread dlthread=new DownloadThread();
      dlthread.strURL=strURL;
      dlthread.file_name_to_save=txtSaveTo.getText();
      //dlthread.start();// chờ người dùng chọn nút start thì mới download
      dlthread.tableFile=this.tableFiles;
      dlthread.row_index=i;
      this.dowloaders.add(dlthread);
      // lưu danh sách này vào
      Vector row = new Vector();
      
      //String messageId=messages[i].message_id;//nếu mail được lưu trong local thì giá tri nay = null
      //String id=i.toString();
      //String filename="xxxx"+i.toString();//@ todo:
      //Integer filesize_temp="size";
      //String filesize="Size";
      //Integer percent="Percent";
      //String percent="0%";
      row.add(i.toString());
      row.add(name);
      row.add(f.length());
      row.add("0%");
      
      
      
      model.addRow(row);
      
      
      
      
    }
}//GEN-LAST:event_btnURLActionPerformed

  public void opendownloader()
  {
    btnURLActionPerformed(null);
  }
  private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
    // TODO add your handling code here:
    if(this.dowloaders.isEmpty()) {
      JOptionPane.showMessageDialog(null, "No file to start. Please add some URLs");
    }
    btnPauseAll.setEnabled(true);
    // duyệt qua danh sách các downloader
    for(int i=0;i<this.dowloaders.size();i++) {
      dowloaders.get(i).start();
      // thực hiện cập nhật lại giá trị của table tương ứng với thread này
      
    }
}//GEN-LAST:event_btnStartActionPerformed

  private void btnPauseAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPauseAllActionPerformed
    // TODO add your handling code here:
    for(int i=0;i<this.dowloaders.size();i++) {
      dowloaders.get(i).dl.pause();
      // thực hiện cập nhật lại giá trị của table tương ứng với thread này
      
    }
    this.btnPauseAll.setEnabled(false);
    btnResumAll.setEnabled(true);
}//GEN-LAST:event_btnPauseAllActionPerformed

  private void btnResumAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResumAllActionPerformed
    // TODO add your handling code here:
    // TODO add your handling code here:
    for(int i=0;i<this.dowloaders.size();i++) {
      dowloaders.get(i).dl.resume();
      // thực hiện cập nhật lại giá trị của table tương ứng với thread này
      
    }
    this.btnPauseAll.setEnabled(true);
    this.btnResumAll.setEnabled(false);
  }//GEN-LAST:event_btnResumAllActionPerformed

  private void btnPauseOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPauseOneActionPerformed
    // TODO add your handling code here:
    DownloadThread dlThread=this.dowloaders.get(row_selected_index);
    Downloader dl=dlThread.dl;
    dl.pause();
    btnPauseOne.setEnabled(false);
    btnResumOne.setEnabled(true);
}//GEN-LAST:event_btnPauseOneActionPerformed

  private void btnResumOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResumOneActionPerformed
    // TODO add your handling code here:
    DownloadThread dlThread=this.dowloaders.get(row_selected_index);
    Downloader dl=dlThread.dl;
    dl.resume();
    btnResumOne.setEnabled(false);
    btnPauseOne.setEnabled(true);
}//GEN-LAST:event_btnResumOneActionPerformed

  private void tableFilesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableFilesMouseClicked
    // TODO add your handling code here:
    Point p=evt.getPoint();
    
    this.row_selected_index=tableFiles.rowAtPoint(p);
    if(row_selected_index!=-1)//neu dong nay co gia tri
    {
      // hiển thị trạng thái tương ứng của url hiện tại
      DownloadThread dlThread=this.dowloaders.get(row_selected_index);
      Downloader dl=dlThread.dl;
      if(dl.isRunning()==true) {
        btnPauseOne.setEnabled(true);
        
      } else {
        btnResumOne.setEnabled(true);
      }
    }
}//GEN-LAST:event_tableFilesMouseClicked

  private void btnSelectFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectFolderActionPerformed
    // TODO add your handling code here:
    int result;
    JFileChooser chooser;
    chooser = new JFileChooser();
    chooser.setCurrentDirectory(new java.io.File("."));
    chooser.setDialogTitle("Select folder to save file");
    chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    //
    // disable the "All files" option.
    //
    chooser.setAcceptAllFileFilterUsed(false);
    //
    if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
      //        System.out.println("getCurrentDirectory(): "
      //           +  chooser.getCurrentDirectory());
      //        System.out.println("getSelectedFile() : "
      //           +  chooser.getSelectedFile());
      //        }
      StringBuffer bf=new StringBuffer(chooser.getCurrentDirectory().toString());
      bf=bf.append("/");
      txtSaveTo.setText(bf.toString());
    } else {
      System.out.println("No Selection ");
    }
  }//GEN-LAST:event_btnSelectFolderActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {

      public void run() {
        DialogDownloader dialog = new DialogDownloader(new javax.swing.JFrame(), true);
        dialog.addWindowListener(new java.awt.event.WindowAdapter() {

          public void windowClosing(java.awt.event.WindowEvent e) {
            System.exit(0);
          }
        });
        dialog.setVisible(true);
      }
    });
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnPauseAll;
  private javax.swing.JButton btnPauseOne;
  private javax.swing.JButton btnResumAll;
  private javax.swing.JButton btnResumOne;
  private javax.swing.JButton btnSelectFolder;
  private javax.swing.JButton btnStart;
  private javax.swing.JButton btnURL;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JToolBar jToolBar1;
  private javax.swing.JPanel mainPanel;
  private javax.swing.JTable tableFiles;
  private javax.swing.JTextField txtSaveTo;
  // End of variables declaration//GEN-END:variables
}
